import React from "react";
import PropTypes from "prop-types";

const styles = {
  container: {
    padding: "40px",
    background: "white",
    maxWidth: "1200px",
    margin: "0 auto",
  },
  header: {
    display: "flex",
    justifyContent: "space-between",
    marginBottom: "40px",
  },
  logo: {
    height: "60px",
    width: "auto",
  },
  companyInfo: {
    textAlign: "right",
  },
  companyTitle: {
    fontSize: "24px",
    fontWeight: 600,
    marginBottom: "8px",
  },
  companySubtitle: {
    fontSize: "18px",
    fontWeight: 500,
    marginBottom: "4px",
  },
  companyText: {
    margin: "2px 0",
    color: "#666",
  },
  metaSection: {
    border: "1px solid #e0e0e0",
    padding: "15px",
    marginBottom: "30px",
    borderRadius: "4px",
  },
  metaTable: {
    width: "auto",
  },
  metaCell: {
    padding: "4px 15px 4px 0",
  },
  metaCellLabel: {
    fontWeight: 500,
  },
  sectionTitle: {
    fontSize: "20px",
    marginBottom: "15px",
  },
  overviewGrid: {
    display: "grid",
    gridTemplateColumns: "repeat(auto-fit, minmax(200px, 1fr))",
    gap: "20px",
    marginBottom: "30px",
  },
  overviewItem: {
    marginBottom: "5px",
  },
  overviewLabel: {
    display: "block",
    fontWeight: 500,
    marginBottom: "5px",
  },
  overviewValue: {
    fontSize: "18px",
    color: "#2196f3",
  },
  table: {
    width: "100%",
    borderCollapse: "collapse",
    marginTop: "15px",
    marginBottom: "30px",
  },
  tableHeader: {
    padding: "12px",
    textAlign: "left",
    borderBottom: "1px solid #e0e0e0",
    backgroundColor: "#f5f5f5",
    fontWeight: 500,
  },
  tableCell: {
    padding: "12px",
    textAlign: "left",
    borderBottom: "1px solid #e0e0e0",
  },
  statusBadge: (status) => ({
    padding: "4px 8px",
    borderRadius: "4px",
    fontSize: "14px",
    backgroundColor: status.toLowerCase() === "paid" ? "#e8f5e9" : "#fff3e0",
    color: status.toLowerCase() === "paid" ? "#2e7d32" : "#f57c00",
  }),
  dateRange: {
    display: "flex",
    gap: "20px",
    marginBottom: "15px",
  },
  dateRangeText: {
    fontWeight: 500,
  },
  footer: {
    marginTop: "40px",
    paddingTop: "20px",
    borderTop: "1px solid #e0e0e0",
    textAlign: "center",
    color: "#666",
  },
  footerText: {
    margin: "5px 0",
    fontSize: "14px",
  },
};

const SalesReport = ({ reportData }) => {
  return (
    <div style={styles.container}>
      <div style={styles.header}>
        <div>
          <img
            src="/monaprotect-logo.png"
            alt="Mona Protect Logo"
            style={styles.logo}
          />
        </div>
        <div style={styles.companyInfo}>
          <h1 style={styles.companyTitle}>Sales Report</h1>
          <h2 style={styles.companySubtitle}>Mona Technologies Limited</h2>
          <p style={styles.companyText}>613 Ahmadu Bello Way, Abuja</p>
          <p style={styles.companyText}>+234 903 345 6789</p>
          <p style={styles.companyText}>info@monaprotect.com</p>
        </div>
      </div>

      <div style={styles.metaSection}>
        <table style={styles.metaTable}>
          <tbody>
            <tr>
              <td style={styles.metaCellLabel}>Report ID:</td>
              <td style={styles.metaCell}>
                {reportData?.reportId || "RPT123456"}
              </td>
            </tr>
            <tr>
              <td style={styles.metaCellLabel}>Generated by:</td>
              <td style={styles.metaCell}>
                {reportData?.generatedBy || "Admin 1/Michael James"}
              </td>
            </tr>
            <tr>
              <td style={styles.metaCellLabel}>Generated on:</td>
              <td style={styles.metaCell}>
                {reportData?.generatedOn || "2025-01-15 16:09:05"}
              </td>
            </tr>
            <tr>
              <td style={styles.metaCellLabel}>Version:</td>
              <td style={styles.metaCell}>{reportData?.version || "1.0"}</td>
            </tr>
          </tbody>
        </table>
      </div>

      <div>
        <h2 style={styles.sectionTitle}>Overview</h2>
        <div style={styles.overviewGrid}>
          <div style={styles.overviewItem}>
            <label style={styles.overviewLabel}>Total No. of Devices:</label>
            <span style={styles.overviewValue}>
              {reportData?.totalDevices || "10"}
            </span>
          </div>
          <div style={styles.overviewItem}>
            <label style={styles.overviewLabel}>Total Commission earned:</label>
            <span style={styles.overviewValue}>
              ₦{reportData?.totalCommissionEarned || "100,000"}
            </span>
          </div>
          <div style={styles.overviewItem}>
            <label style={styles.overviewLabel}>
              Total Commission received:
            </label>
            <span style={styles.overviewValue}>
              ₦{reportData?.totalCommissionReceived || "50,000"}
            </span>
          </div>
          <div style={styles.overviewItem}>
            <label style={styles.overviewLabel}>
              Total Commission awaiting:
            </label>
            <span style={styles.overviewValue}>
              ₦{reportData?.totalCommissionAwaiting || "50,000"}
            </span>
          </div>
        </div>
      </div>

      <div>
        <h2 style={styles.sectionTitle}>Highlight of Sales</h2>
        <table style={styles.table}>
          <thead>
            <tr>
              <th style={styles.tableHeader}>S/N</th>
              <th style={styles.tableHeader}>Devices</th>
              <th style={styles.tableHeader}>Count</th>
            </tr>
          </thead>
          <tbody>
            {reportData?.highlights?.map((item, index) => (
              <tr key={index}>
                <td style={styles.tableCell}>
                  {String(index + 1).padStart(2, "0")}
                </td>
                <td style={styles.tableCell}>{item.device}</td>
                <td style={styles.tableCell}>{item.count}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      <div>
        <h2 style={styles.sectionTitle}>Sales Information</h2>
        <div style={styles.dateRange}>
          <span style={styles.dateRangeText}>
            From: {reportData?.dateRange?.from || "Jan. 22TH 2024"}
          </span>
          <span style={styles.dateRangeText}>
            To: {reportData?.dateRange?.to || "Dec. 22TH 2024"}
          </span>
        </div>
        <table style={styles.table}>
          <thead>
            <tr>
              <th style={styles.tableHeader}>Device model</th>
              <th style={styles.tableHeader}>Brand</th>
              <th style={styles.tableHeader}>Commission</th>
              <th style={styles.tableHeader}>Status</th>
              <th style={styles.tableHeader}>Team Member</th>
              <th style={styles.tableHeader}>Date</th>
            </tr>
          </thead>
          <tbody>
            {reportData?.salesInfo?.map((sale, index) => (
              <tr key={index}>
                <td style={styles.tableCell}>{sale.deviceModel}</td>
                <td style={styles.tableCell}>{sale.brand}</td>
                <td style={styles.tableCell}>₦{sale.commission}</td>
                <td style={styles.tableCell}>
                  <span style={styles.statusBadge(sale.status)}>
                    {sale.status}
                  </span>
                </td>
                <td style={styles.tableCell}>{sale.teamMember}</td>
                <td style={styles.tableCell}>{sale.date}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      <div style={styles.footer}>
        <p style={styles.footerText}>
          Generated on: {reportData?.generatedOn || "2025-01-15 16:30"} | Page 1
          of 1 | Report ID: {reportData?.reportId || "RPT123456"} | Mona Protect
        </p>
        <p style={styles.footerText}>Confidential – For internal use only</p>
      </div>
    </div>
  );
};

SalesReport.propTypes = {
  reportData: PropTypes.shape({
    reportId: PropTypes.string,
    generatedBy: PropTypes.string,
    generatedOn: PropTypes.string,
    version: PropTypes.string,
    totalDevices: PropTypes.string,
    totalCommissionEarned: PropTypes.string,
    totalCommissionReceived: PropTypes.string,
    totalCommissionAwaiting: PropTypes.string,
    highlights: PropTypes.arrayOf(
      PropTypes.shape({
        device: PropTypes.string,
        count: PropTypes.number,
      })
    ),
    dateRange: PropTypes.shape({
      from: PropTypes.string,
      to: PropTypes.string,
    }),
    salesInfo: PropTypes.arrayOf(
      PropTypes.shape({
        deviceModel: PropTypes.string,
        brand: PropTypes.string,
        commission: PropTypes.string,
        status: PropTypes.string,
        teamMember: PropTypes.string,
        date: PropTypes.string,
      })
    ),
  }),
};

export default SalesReport;
